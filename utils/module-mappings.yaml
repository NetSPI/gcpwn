everything_modules:
  - module_name: "enum_all"
    module_category: "Enumeration"
    info_blurb: "Call all enumeration modules defined in gcpwn. Can add flags like --iam to do all IAM TestIAMPermission checks and --all-permissions to do ~9000 permission checks at the project/folder/org level. Can also add the --download flag to try to do mass dowload while enumerating"
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.Everything.Enumeration.enum_all"
  - module_name: "analyze_vulns"
    module_category: "Process"
    info_blurb: "Review org-wide security issues that might arise mainly with roles/permissions. Export the data to a csv or txt with --csv or --txt respectively."
    author: "Scott (@WebbinRoot)"
    location: "Modules.Everything.Process.analyze_vulns"
  - module_name: "process_iam_bindings"
    module_category: "Process"
    info_blurb: "Review org-wide security issues that might arise mainly with roles/permissions. Export the data to a csv or txt with --csv or --txt respectively. Note this will handle both convenience and custom roles in addition to normal predefined GCP roles, but not constraints or anything more advanced."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.Everything.Process.process_iam_bindings"
  - module_name: "generate_graph"
    module_category: "Process"
    info_blurb: "Consolidate all IAM roles enumerated per IAM policy bindings into one TXT or CSV file. This paried with generate_graph can give you a high level overview of who has permissions where in an org"
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.Everything.Process.generate_graph"

cloud_storage_modules:
  - module_name: "enum_buckets"
    module_category: "Enumeration"
    info_blurb: "Enumerate all buckets given a project ID. Checks authenticated/anonymous IAM permissions, and can download files with filters per the flags supported. Can pass in specific bucket or blob names via stdin or files if you want to target specific buckets."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.CloudStorage.Enumeration.enum_buckets"
  - module_name: "enum_hmac_keys"
    module_category: "Enumeration"
    info_blurb: "Enumerate all HMAC keys tied to the Cloud Storage account in the specified project ID. This is found via the Interoperability settings via the console. Note HMAC 'Secrets' are NOt returned per the API and are only seen on creation. These will be saved if running `exploit_storage_hmac`."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.CloudStorage.Enumeration.enum_hmac_keys"
  - module_name: "exploit_bucket_upload"
    module_category: "Exploit"
    info_blurb: "Authenticated upload of a local file or STDIN to a Cloud Storage Bucket. You can specify the arbitrary path you want to send the file contents/STDIN to. See wiki for more details."
    version: "1 - 06/01/2024"
    author: "Scott @WebbinRoot"
    location: "Modules.CloudStorage.Exploit.exploit_bucket_upload"
  - module_name: "exploit_storage_setiampolicy"
    module_category: "Exploit"
    info_blurb: "Set the IAM policy for a bucket. For example, you could make yourself storage admin of a bucket and proceed with bucket uploads/bucket takeovers/etc."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.CloudStorage.Exploit.exploit_storage_setiampolicy"
  - module_name: "exploit_storage_hmac"
    module_category: "Exploit"
    info_blurb: "Create a new HMAC Key tied to a service account. Subsequently use this key to try to enumerate/download Cloud Bucket Data using the SigV4 XML API. The module can also activate/deactivate existing keys"
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.CloudStorage.Exploit.exploit_storage_hmac"
  - module_name: "unauth_bucketbrute"
    module_category: "Unauthenticated"
    info_blurb: "A copy of Rhino Security GCP Brute tool. Will brute force GCP buckets given a keyterm and can check for anonymous permissions. Should not leverage credentials to try authenticated permisision checks, although that might be added in the future"
    version: "1 - 06/01/2024"
    author: Taken from https://github.com/RhinoSecurityLabs/GCPBucketBrute
    location: "Modules.CloudStorage.Unauthenticated.unauth_bucketbrute"
  # - module_name: "unauth_enum_bucket"
  #   module_category: "Unauthenticated"
  #   info_blurb: "Given just a bucket name, try to enumerate any blobs via unauthetnicated means. You can pass in a wordlist file for the blobs like the ffuf wordlist or dib wordlist to try brute forcing directories at a depth of 1. Calls blob.exists() and relies on error codes returned to determine if bucket/blob exists"
  #   version: "1 - 06/01/2024"
  #   author: "Scott (@WebbinRoot)"
  #   location: "Modules.CloudStorage.Unauthenticated.unauth_enum_bucket"

cloud_functions_modules:
  - module_name: "enum_functions"
    module_category: "Enumeration"
    info_blurb: "Enumerate all v1 & v2 functions. Checks authenticated IAM permissions, and can download soruce code if its in a bucket. Can pass in specific function names via stdin or files if you want to target specific functions."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.CloudFunctions.Enumeration.enum_functions"
  - module_name: "exploit_functions_invoke"
    module_category: "Exploit"
    info_blurb: "Upload or modify function code. Subsequently invoke it to get the Oauth token for a attached service account. Can auto-assume new role if desired. Can also be used to standalone call a function."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.CloudFunctions.Exploit.exploit_functions_invoke"
  - module_name: "exploit_functions_setiampolicy"
    module_category: "Exploit"
    info_blurb: "Set the IAM policy for a function. For example, you could make yourself function admin of a function and proceed to replace the source code."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.CloudFunctions.Exploit.exploit_functions_setiampolicy"
  - module_name: "unauth_functionbrute"
    module_category: "Unauthenticated"
    info_blurb: "Based off Rhino Security code here: https://github.com/RhinoSecurityLabs/GCPBucketBrute. Same concept but modified slightly to brute forcue functions by URLs unauth."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.CloudFunctions.Unauthenticated.unauth_functionbrute"

compute_modules:
  - module_name: "enum_instances"
    module_category: "Enumeration"
    info_blurb: "Enumerate all compute instances. Checks authenticated IAM permissions, and can take screenshot or download serial logs. Can pass in specific instance names via stdin or files if you want to target specific instances."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.CloudCompute.Enumeration.enum_instances"
  - module_name: "enum_compute_projects"
    module_category: "Enumeration"
    info_blurb: "Get a compute project details along with its metadata. This is the same as a project in an org, but Compute has a separate definition of a project that includes metadata."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.CloudCompute.Enumeration.enum_compute_projects"
  - module_name: "exploit_instance_ssh_keys"
    module_category: "Exploit"
    info_blurb: "Upload the public portion of an SSH key either to a projec tor instance. This might allow for SSH access depending on if no other restrictions are in place. Project edits will impact all instances in the project. Ergo uploading SSH keys to a project grants SSH access to all instances"
    author: "Scott (@WebbinRoot)"
    location: "Modules.CloudCompute.Exploit.exploit_instance_ssh_keys"
  - module_name: "exploit_instance_startup_script"
    module_category: "Exploit"
    info_blurb: "Create an instance or edit an existing one (through a restart) and upload a startup script that will exfiltrate the compute metadata to a URL of the caller's choice. These need to be manually added via `creds add` in gcpwn. Note a service account needs to be attached to the compute instance requiring those permissions."
    author: "Scott (@WebbinRoot)"
    location: "Modules.CloudCompute.Exploit.exploit_instance_startup_script"
  - module_name: "exploit_instance_setiampolicy"
    module_category: "Exploit"
    info_blurb: "Set the IAM policy for a instance. For example, you could make yourself instance admin of a instance and proceed to upload SSH keys or run other exploit module."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.CloudCompute.Exploit.exploit_instance_setiampolicy"


resource_manager_modules:
  - module_name: "enum_resources"
    module_category: "Enumeration"
    info_blurb: "Enumerate projects/folders/organizations. Pass in --iam to perform testIAMPermissions on each resource. Adding --all-permissions will enumerate ~9000 individual permission in batches and is the most comprehensive."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.ResourceManager.Enumeration.enum_resources"
  - module_name: "exploit_organization_setiampolicy"
    module_category: "Exploit"
    info_blurb: "Set the IAM policy for the organization."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.ResourceManager.Exploit.exploit_organization_setiampolicy"
  - module_name: "exploit_folder_setiampolicy"
    module_category: "Exploit"
    info_blurb: "Set the IAM policy for the folders."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.ResourceManager.Exploit.exploit_folder_setiampolicy"
  - module_name: "exploit_project_setiampolicy"
    module_category: "Exploit"
    info_blurb: "Set the IAM policy for the projects."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.ResourceManager.Exploit.exploit_project_setiampolicy"

secrets_modules:
  - module_name: "enum_secrets"
    module_category: "Enumeration"
    info_blurb: "Enumerate all secret names, secret versions, and potentially secret values depending on permissions."
    version: "1 - 07/08/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.SecretsManager.Enumeration.enum_secrets"
  - module_name: "exploit_secrets_setiampolicy"
    module_category: "Exploit"
    info_blurb: "Set the IAM policy for the secrets."
    version: "1 - 07/13/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.SecretsManager.Exploit.exploit_secrets_setiampolicy"

iam_modules:
  - module_name: "enum_policy_bindings"
    module_category: "Enumeration"
    info_blurb: "Enumerate all IAM permission bindings on all resources enumerated thus far. Its good to run this after running other enumeration modules. enum_all runs enum_policy_bindings once at the end after enumerating everything."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.IAM.Enumeration.enum_policy_bindings"
  - module_name: "enum_custom_roles"
    module_category: "Enumeration"
    info_blurb: "Enumerate all IAM custom roles in the assosciated project. Organization suppot not supported at this time."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.IAM.Enumeration.enum_custom_roles"
  - module_name: "enum_service_accounts"
    module_category: "Enumeration"
    info_blurb: "Enumerate all service accounts in the project and their keys. Note like HMAC keys enumeration does not give you the actual key secrets as you need to be able to create a key to get that, but still can see ther IDs."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.IAM.Enumeration.enum_service_accounts"
  - module_name: "exploit_generate_access_token"
    module_category: "Exploit"
    info_blurb: "Generate an access token for a service account and assume it within GCPwn (--assume) to pivot to a different user. Note this also handles implicit delegation with the --delegation flag relying on you to either supply the role chain or checking whats been enumerated thus far to help you build the delegation chain."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.IAM.Exploit.exploit_generate_access_token"
  - module_name: "exploit_service_account_keys"
    module_category: "Exploit"
    info_blurb: "Generate an account key for a service account and assume it within GCPwn (--assume) to pivot to a different user. Note unlike the access token which usually lasts for around 1 hour, a service key can last for much longer and is a much more permanent pivot."
    version: "1 - 06/01/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.IAM.Exploit.exploit_service_account_keys"

storage_transfer_modules:
  - module_name: "enum_transfer_jobs"
    module_category: "Enumeration"
    info_blurb: "Enumerate all transfer jobs. Collect secrets/recon from other data sources in other cloud providers."
    version: "1 - 07/15/2024"
    author: "Scott (@WebbinRoot)"
    location: "Modules.StorageTransfer.Enumeration.enum_transfer_jobs"